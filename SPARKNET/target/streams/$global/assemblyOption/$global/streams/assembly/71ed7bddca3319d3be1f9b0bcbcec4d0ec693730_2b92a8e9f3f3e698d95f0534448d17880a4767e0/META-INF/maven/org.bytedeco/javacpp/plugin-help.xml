<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.4 on 2016-03-16 -->

<plugin>
  <name>JavaCPP</name>
  <description>The missing bridge between Java and native C++</description>
  <groupId>org.bytedeco</groupId>
  <artifactId>javacpp</artifactId>
  <version>1.2-SPARKNETCPU</version>
  <goalPrefix>javacpp</goalPrefix>
  <mojos>
    <mojo>
      <goal>build</goal>
      <description>A Maven Mojo to call the Builder (C++ header file -&gt; Java class -&gt; C++ JNI -&gt; native library). Can also be considered as an example of how to use the Builder programmatically.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.bytedeco.javacpp.tools.BuildMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>classOrPackageName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Process only this class or package (suffixed with .* or .**).</description>
        </parameter>
        <parameter>
          <name>classOrPackageNames</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Process only these classes or packages (suffixed with .* or .**).</description>
        </parameter>
        <parameter>
          <name>classPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Load user classes from classPath.</description>
        </parameter>
        <parameter>
          <name>classPaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Load user classes from classPaths.</description>
        </parameter>
        <parameter>
          <name>compile</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Compile and delete the generated .cpp files.</description>
        </parameter>
        <parameter>
          <name>compilerOptions</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Pass compilerOptions directly to compiler.</description>
        </parameter>
        <parameter>
          <name>copyLibs</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Copy to output directory dependent libraries (link and preload).</description>
        </parameter>
        <parameter>
          <name>environmentVariables</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add environment variables to the compiler subprocess.</description>
        </parameter>
        <parameter>
          <name>header</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Generate header file with declarations of callbacks functions.</description>
        </parameter>
        <parameter>
          <name>includePath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &apos;platform.includepath&apos; property.</description>
        </parameter>
        <parameter>
          <name>includePaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &apos;platform.includepath&apos; property.</description>
        </parameter>
        <parameter>
          <name>jarPrefix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Also create a JAR file named &lt;jarPrefix&gt;-&lt;platform&gt;.jar.</description>
        </parameter>
        <parameter>
          <name>linkPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &apos;platform.linkpath&apos; property.</description>
        </parameter>
        <parameter>
          <name>linkPaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &apos;platform.linkpath&apos; property.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Output all generated files to outputDirectory.</description>
        </parameter>
        <parameter>
          <name>outputName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Output everything in a file named after given outputName.</description>
        </parameter>
        <parameter>
          <name>preloadPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &apos;platform.preloadpath&apos; property.</description>
        </parameter>
        <parameter>
          <name>preloadPaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &apos;platform.preloadpath&apos; property.</description>
        </parameter>
        <parameter>
          <name>properties</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Load all properties from resource.</description>
        </parameter>
        <parameter>
          <name>propertyFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Load all properties from file.</description>
        </parameter>
        <parameter>
          <name>propertyKeysAndValues</name>
          <type>java.util.Properties</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set property keys to values.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Skip the execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <classOrPackageName implementation="java.lang.String">${javacpp.classOrPackageName}</classOrPackageName>
        <classOrPackageNames implementation="java.lang.String[]">${javacpp.classOrPackageNames}</classOrPackageNames>
        <classPath implementation="java.lang.String" default-value="${project.build.outputDirectory}">${javacpp.classPath}</classPath>
        <classPaths implementation="java.lang.String[]">${javacpp.classPaths}</classPaths>
        <compile implementation="boolean" default-value="true">${javacpp.compile}</compile>
        <compilerOptions implementation="java.lang.String[]">${javacpp.compilerOptions}</compilerOptions>
        <copyLibs implementation="boolean" default-value="false">${javacpp.copyLibs}</copyLibs>
        <environmentVariables implementation="java.util.Map">${javacpp.environmentVariables}</environmentVariables>
        <header implementation="boolean" default-value="false">${javacpp.header}</header>
        <includePath implementation="java.lang.String">${javacpp.includePath}</includePath>
        <includePaths implementation="java.lang.String[]">${javacpp.includePaths}</includePaths>
        <jarPrefix implementation="java.lang.String">${javacpp.jarPrefix}</jarPrefix>
        <linkPath implementation="java.lang.String">${javacpp.linkPath}</linkPath>
        <linkPaths implementation="java.lang.String[]">${javacpp.linkPaths}</linkPaths>
        <outputDirectory implementation="java.io.File">${javacpp.outputDirectory}</outputDirectory>
        <outputName implementation="java.lang.String">${javacpp.outputName}</outputName>
        <preloadPath implementation="java.lang.String">${javacpp.preloadPath}</preloadPath>
        <preloadPaths implementation="java.lang.String[]">${javacpp.preloadPaths}</preloadPaths>
        <properties implementation="java.lang.String">${javacpp.properties}</properties>
        <propertyFile implementation="java.io.File">${javacpp.propertyFile}</propertyFile>
        <propertyKeysAndValues implementation="java.util.Properties">${javacpp.propertyKeysAndValues}</propertyKeysAndValues>
        <skip implementation="boolean" default-value="false">${javacpp.skip}</skip>
      </configuration>
    </mojo>
  </mojos>
</plugin>